package de.cas_ual_ty.mundusmagicus.magic;

public abstract class Node
{
	/**
	 * Did this node already calculate? If yes the result is already saved and can just be retrieved.
	 * Use {@link #isCalculated()} to check.
	 */
	protected boolean calculated = false;
	
	/**
	 * Did this node already calculate? If yes the result is already saved and can just be retrieved.
	 * @return true if already calculated, false if calculation still needs to be done.
	 */
	public boolean isCalculated()
	{
		return this.calculated;
	}
	
	/**
	 * Make sure all parents are calculated, then calculate this node.
	 * {@link #doCalculate()} is called inside.
	 */
	public void calculate()
	{
		NodeField field0, field1;
		
		int i, j;
		
		for(i = 0; i < this.getInputAmt(); ++i)
		{
			field0 = this.getInput(i);
			
			for(j = 0; j < field0.getConnections().size(); ++j)
			{
				field1 = (NodeField) field0.getConnections().get(j);
				
				if(field1.node.isCalculated())
				{
					field1.node.calculate();
				}
			}
		}
		
		this.doCalculate();
	}
	
	/**
	 * Parent nodes all have calculated already, calculation is done in here.
	 */
	protected abstract void doCalculate();
	
	public abstract int getOutputAmt();
	public abstract int getInputAmt();
	public abstract NodeField getOutput(int index);
	public abstract NodeField getInput(int index);
}
