{
    "_commentTestingStart": "--- Testing START ---",
    "item.visibilis.code_print": "Code Print",
    
    "node.visibilis:print_debug": "vprintdebug",
    "field.visibilis:print_debug.out1": "(O)",
    "field.visibilis:print_debug.in1": "(I)",
    "node.visibilis:print_debug.groups": "test",
    
    "group.test": "Test",
    "group.test.tags": "test;testing;debug",
    
    "_commentTestingEnd": "--- Testing END ---",
    
    "_commentGeneralTranslation": "--- General Translation ---",
    "visibilis.node": "Node",
    "visibilis.output": "Output",
    "visibilis.input": "Input",
    "visibilis.print": "Print",
    "visibilis.undo": "Undo",
    "visibilis.redo": "Redo",
    "visibilis.action.delete": "Delete",
    "visibilis.action.expand": "Expand",
    "visibilis.action.shrink": "Shrink",
    "visibilis.action.parallelize": "Parallelize",
    "visibilis.action.unparallelize": "De-Parallelize",
    "visibilis.action.dynamic": "Make Dynamic",
    "visibilis.action.static": "Make Static",
    "visibilis.force": "Forces Dynamic Calculations (value is always recalculated)!",
    
    "_commentEvents": "--- Events ---",
    "group.events": "Events",
    "group.events.tags": "events",
    
    "node.visibilis:event_command": "vexec",
    "field.visibilis:event_command.out1": "(O)",
    "node.visibilis:event_command.groups": "events;test",
    
    "node.visibilis:event_right_click": "Right Click Item",
    "field.visibilis:event_right_click.out1": "(O)",
    "node.visibilis:event_right_click.groups": "events",
    
    "_commentBaseGroups": "--- Base Groups ---",
    "group.operators": "Operators",
    "group.operators.tags": "operators",
    
    "_commentCalculation": "--- Calculation ---",
    "group.calculation": "Calculation",
    "group.calculation.tags": "calculation;math",
    
    "node.visibilis:addition": "Addition",
    "field.visibilis:addition.out1": "Sum",
    "field.visibilis:addition.in1": "Summand",
    "field.visibilis:addition.in2": "Summand",
    "node.visibilis:addition.groups": "calculation;operators",
    
    "node.visibilis:subtraction": "Subtraction",
    "field.visibilis:subtraction.out1": "Difference",
    "field.visibilis:subtraction.in1": "Minuend",
    "field.visibilis:subtraction.in2": "Subtrahend",
    "node.visibilis:subtraction.groups": "calculation;operators",
    
    "node.visibilis:multiplication": "Multiplication",
    "field.visibilis:multiplication.out1": "Product",
    "field.visibilis:multiplication.in1": "Factor",
    "field.visibilis:multiplication.in2": "Factor",
    "node.visibilis:multiplication.groups": "calculation;operators",
    
    "node.visibilis:division": "Division",
    "field.visibilis:division.out1": "Quotient",
    "field.visibilis:division.in1": "Dividend",
    "field.visibilis:division.in2": "Divisor",
    "node.visibilis:division.groups": "calculation;operators",
    
    "node.visibilis:exponentiation": "Exponentiation",
    "field.visibilis:exponentiation.out1": "Power",
    "field.visibilis:exponentiation.in1": "Base",
    "field.visibilis:exponentiation.in2": "Exponent",
    "node.visibilis:exponentiation.groups": "calculation;operators",
    
    "node.visibilis:root": "Nth Root",
    "field.visibilis:root.out1": "Root",
    "field.visibilis:root.in1": "Radicand",
    "field.visibilis:root.in2": "Degree",
    "node.visibilis:root.groups": "calculation;operators",
    
    "node.visibilis:logarithm_10": "Logarithm Base 10",
    "field.visibilis:logarithm_10.out1": "Logarithm",
    "field.visibilis:logarithm_10.in1": "Anti-Logarithm",
    "node.visibilis:logarithm_10.groups": "calculation;operators",
    
    "node.visibilis:logarithm_e": "Logarithm Base e",
    "field.visibilis:logarithm_e.out1": "Logarithm",
    "field.visibilis:logarithm_e.in1": "Anti-Logarithm",
    "node.visibilis:logarithm_e.groups": "calculation;operators",
    
    "node.visibilis:logarithm_1p": "Logarithm Base x+1",
    "field.visibilis:logarithm_1p.out1": "Logarithm",
    "field.visibilis:logarithm_1p.in1": "Anti-Logarithm",
    "node.visibilis:logarithm_1p.groups": "calculation;operators",
    
    "node.visibilis:modulo": "Modulo",
    "field.visibilis:modulo.out1": "Residue",
    "field.visibilis:modulo.in1": "Dividend",
    "field.visibilis:modulo.in2": "Modulus",
    "node.visibilis:modulo.groups": "calculation;operators",
    
    "node.visibilis:concatenation": "Concatenation",
    "field.visibilis:concatenation.out1": "String",
    "field.visibilis:concatenation.in1": "String",
    "node.visibilis:concatenation.groups": "calculation;operators",
    
    "_commentConstants": "--- Constants ---",
    "group.constants": "Constants",
    "group.constants.tags": "constants;math",
    
    "node.visibilis:e": "e",
    "field.visibilis:e.out1": "e",
    "node.visibilis:e.groups": "constants",
    
    "node.visibilis:pi": "Pi",
    "field.visibilis:pi.out1": "Pi",
    "node.visibilis:pi.groups": "constants",
    
    "node.visibilis:sqrt_2": "Square Root of 2",
    "field.visibilis:sqrt_2.out1": "SQRT 2",
    "node.visibilis:sqrt_2.groups": "constants",
    
    "node.visibilis:constant_integer": "Integer Constant",
    "field.visibilis:constant_integer.in1": "Integer",
    "field.visibilis:constant_integer.out1": "Integer",
    "node.visibilis:constant_integer.groups": "constants",
    
    "node.visibilis:constant_float": "Float Constant",
    "field.visibilis:constant_float.in1": "Float",
    "field.visibilis:constant_float.out1": "Float",
    "node.visibilis:constant_float.groups": "constants",
    
    "node.visibilis:constant_double": "Double Constant",
    "field.visibilis:constant_double.in1": "Double",
    "field.visibilis:constant_double.out1": "Double",
    "node.visibilis:constant_double.groups": "constants",
    
    "node.visibilis:constant_boolean": "Boolean Constant",
    "field.visibilis:constant_boolean.in1": "Boolean",
    "field.visibilis:constant_boolean.out1": "Boolean",
    "node.visibilis:constant_boolean.groups": "constants;logic_gates",
    
    "node.visibilis:constant_string": "String Constant",
    "field.visibilis:constant_string.in1": "String",
    "field.visibilis:constant_string.out1": "String",
    "node.visibilis:constant_string.groups": "constants",
    
    "_commentSerialization": "--- Serialization ---",
    "group.serialization": "Serialization",
    "group.serialization.tags": "serialize;serializable",
    "group.load": "Load",
    "group.load.tags": "load;read",
    "group.save": "Save",
    "group.save.tags": "save;write",
    
    "node.visibilis:load_integer": "Load Integer",
    "field.visibilis:load_integer.in1": "Key",
    "field.visibilis:load_integer.out1": "Value",
    "node.visibilis:load_integer.groups": "serialization;load",
    
    "node.visibilis:load_integer_optional": "Load Integer Optional",
    "field.visibilis:load_integer_optional.out1": "(O) Value != null",
    "field.visibilis:load_integer_optional.out2": "Value",
    "field.visibilis:load_integer_optional.out3": "(O) Value == null",
    "field.visibilis:load_integer_optional.in1": "(I)",
    "field.visibilis:load_integer_optional.in2": "Key",
    "node.visibilis:load_integer_optional.groups": "serialization;load",
    
    "node.visibilis:save_integer": "Save Integer",
    "field.visibilis:save_integer.out1": "(O)",
    "field.visibilis:save_integer.in1": "(I)",
    "field.visibilis:save_integer.in2": "Value",
    "field.visibilis:save_integer.in3": "Key",
    "node.visibilis:save_integer.groups": "serialization;save",
    
    "node.visibilis:load_float": "Load Float",
    "field.visibilis:load_float.in1": "Key",
    "field.visibilis:load_float.out1": "Value",
    "node.visibilis:load_float.groups": "serialization;load",
    
    "node.visibilis:load_float_optional": "Load Float Optional",
    "field.visibilis:load_float_optional.out1": "(O) Value != null",
    "field.visibilis:load_float_optional.out2": "Value",
    "field.visibilis:load_float_optional.out3": "(O) Value == null",
    "field.visibilis:load_float_optional.in1": "(I)",
    "field.visibilis:load_float_optional.in2": "Key",
    "node.visibilis:load_float_optional.groups": "serialization;load",
    
    "node.visibilis:save_float": "Save Float",
    "field.visibilis:save_float.out1": "(O)",
    "field.visibilis:save_float.in1": "(I)",
    "field.visibilis:save_float.in2": "Value",
    "field.visibilis:save_float.in3": "Key",
    "node.visibilis:save_float.groups": "serialization;save",
    
    "node.visibilis:load_double": "Load Double",
    "field.visibilis:load_double.in1": "Key",
    "field.visibilis:load_double.out1": "Value",
    "node.visibilis:load_double.groups": "serialization;load",
    
    "node.visibilis:load_double_optional": "Load Double Optional",
    "field.visibilis:load_double_optional.out1": "(O) Value != null",
    "field.visibilis:load_double_optional.out2": "Value",
    "field.visibilis:load_double_optional.out3": "(O) Value == null",
    "field.visibilis:load_double_optional.in1": "(I)",
    "field.visibilis:load_double_optional.in2": "Key",
    "node.visibilis:load_double_optional.groups": "serialization;load",
    
    "node.visibilis:save_double": "Save Double",
    "field.visibilis:save_double.out1": "(O)",
    "field.visibilis:save_double.in1": "(I)",
    "field.visibilis:save_double.in2": "Value",
    "field.visibilis:save_double.in3": "Key",
    "node.visibilis:save_double.groups": "serialization;save",
    
    "node.visibilis:load_boolean": "Load Boolean",
    "field.visibilis:load_boolean.in1": "Key",
    "field.visibilis:load_boolean.out1": "Value",
    "node.visibilis:load_boolean.groups": "serialization;load",
    
    "node.visibilis:load_boolean_optional": "Load Boolean Optional",
    "field.visibilis:load_boolean_optional.out1": "(O) Value != null",
    "field.visibilis:load_boolean_optional.out2": "Value",
    "field.visibilis:load_boolean_optional.out3": "(O) Value == null",
    "field.visibilis:load_boolean_optional.in1": "(I)",
    "field.visibilis:load_boolean_optional.in2": "Key",
    "node.visibilis:load_boolean_optional.groups": "serialization;load",
    
    "node.visibilis:save_boolean": "Save Boolean",
    "field.visibilis:save_boolean.out1": "(O)",
    "field.visibilis:save_boolean.in1": "(I)",
    "field.visibilis:save_boolean.in2": "Value",
    "field.visibilis:save_boolean.in3": "Key",
    "node.visibilis:save_boolean.groups": "serialization;save",
    
    "node.visibilis:load_string": "Load String",
    "field.visibilis:load_string.in1": "Key",
    "field.visibilis:load_string.out1": "Value",
    "node.visibilis:load_string.groups": "serialization;load",
    
    "node.visibilis:load_string_optional": "Load String Optional",
    "field.visibilis:load_string_optional.out1": "(O) Value != null",
    "field.visibilis:load_string_optional.out2": "Value",
    "field.visibilis:load_string_optional.out3": "(O) Value == null",
    "field.visibilis:load_string_optional.in1": "(I)",
    "field.visibilis:load_string_optional.in2": "Key",
    "node.visibilis:load_string_optional.groups": "serialization;load",
    
    "node.visibilis:save_string": "Save String",
    "field.visibilis:save_string.out1": "(O)",
    "field.visibilis:save_string.in1": "(I)",
    "field.visibilis:save_string.in2": "Value",
    "field.visibilis:save_string.in3": "Key",
    "node.visibilis:save_string.groups": "serialization;save",
    
    "node.visibilis:load_block_pos": "Load Block Pos",
    "field.visibilis:load_block_pos.in1": "Key",
    "field.visibilis:load_block_pos.out1": "Value",
    "node.visibilis:load_block_pos.groups": "serialization;load",
    
    "node.visibilis:load_block_pos_optional": "Load Block Pos Optional",
    "field.visibilis:load_block_pos_optional.out1": "(O) Value != null",
    "field.visibilis:load_block_pos_optional.out2": "Value",
    "field.visibilis:load_block_pos_optional.out3": "(O) Value == null",
    "field.visibilis:load_block_pos_optional.in1": "(I)",
    "field.visibilis:load_block_pos_optional.in2": "Key",
    "node.visibilis:load_block_pos_optional.groups": "serialization;load",
    
    "node.visibilis:save_block_pos": "Save Block Pos",
    "field.visibilis:save_block_pos.out1": "(O)",
    "field.visibilis:save_block_pos.in1": "(I)",
    "field.visibilis:save_block_pos.in2": "Value",
    "field.visibilis:save_block_pos.in3": "Key",
    "node.visibilis:save_block_pos.groups": "serialization;save",
    
    "_commentFunctions": "--- Functions ---",
    "group.functions": "Functions",
    "group.functions.tags": "functions;math",
    
    "node.visibilis:sines": "Sines",
    "field.visibilis:sines.out1": "sin(x)",
    "field.visibilis:sines.in1": "x",
    "node.visibilis:sines.groups": "functions",
    
    "node.visibilis:cosines": "Cosines",
    "field.visibilis:cosines.out1": "cos(x)",
    "field.visibilis:cosines.in1": "x",
    "node.visibilis:cosines.groups": "functions",
    
    "node.visibilis:tangent": "Tangent",
    "field.visibilis:tangent.out1": "tan(x)",
    "field.visibilis:tangent.in1": "x",
    "node.visibilis:tangent.groups": "functions",
    
    "node.visibilis:round": "Round",
    "field.visibilis:round.out1": "round(x)",
    "field.visibilis:round.in1": "x",
    "node.visibilis:round.groups": "functions",
    
    "node.visibilis:ceil": "Ceil",
    "field.visibilis:ceil.out1": "ceil(x)",
    "field.visibilis:ceil.in1": "x",
    "node.visibilis:ceil.groups": "functions",
    
    "node.visibilis:floor": "Floor",
    "field.visibilis:floor.out1": "floor(x)",
    "field.visibilis:floor.in1": "x",
    "node.visibilis:floor.groups": "functions",
    
    "_commentLogicGates": "--- Logic Gates ---",
    "group.logic_gates": "Logic Gates",
    "group.logic_gates.tags": "logic;gates;boolean;bit;binary",
    
    "node.visibilis:not": "NOT",
    "field.visibilis:not.out1": "NOT A",
    "field.visibilis:not.in1": "A",
    "node.visibilis:not.groups": "logic_gates;operators",
    
    "node.visibilis:and": "AND",
    "field.visibilis:and.out1": "A AND B",
    "field.visibilis:and.in1": "A",
    "field.visibilis:and.in2": "B",
    "node.visibilis:and.groups": "logic_gates;operators",
    
    "node.visibilis:nand": "NAND",
    "field.visibilis:nand.out1": "A NAND B",
    "field.visibilis:nand.in1": "A",
    "field.visibilis:nand.in2": "B",
    "node.visibilis:nand.groups": "logic_gates;operators",
    
    "node.visibilis:or": "OR",
    "field.visibilis:or.out1": "A OR B",
    "field.visibilis:or.in1": "A",
    "field.visibilis:or.in2": "B",
    "node.visibilis:or.groups": "logic_gates;operators",
    
    "node.visibilis:nor": "NOR",
    "field.visibilis:nor.out1": "A NOR B",
    "field.visibilis:nor.in1": "A",
    "field.visibilis:nor.in2": "B",
    "node.visibilis:nor.groups": "logic_gates;operators",
    
    "node.visibilis:xor": "XOR",
    "field.visibilis:xor.out1": "A XOR B",
    "field.visibilis:xor.in1": "A",
    "field.visibilis:xor.in2": "B",
    "node.visibilis:xor.groups": "logic_gates;operators",
    
    "node.visibilis:xnor": "XNOR",
    "field.visibilis:xnor.out1": "A XNOR B",
    "field.visibilis:xnor.in1": "A",
    "field.visibilis:xnor.in2": "B",
    "node.visibilis:xnor.groups": "logic_gates;operators",
    
    "_commentGeneralNodes": "--- General Nodes ---",
    "group.general": "General",
    "group.general.tags": "general;base",
    
    "node.visibilis:multi_constant": "Multi Constant",
    "field.visibilis:multi_constant.out1": "Output",
    "field.visibilis:multi_constant.in1": "Input",
    "node.visibilis:multi_constant.groups": "general",
    
    "_commentExecNodes": "--- Exec Nodes ---",
    "group.exec": "Exec",
    "group.exec.tags": "order;execution",
    
    "node.visibilis:branch": "Branch",
    "field.visibilis:branch.out1": "(O) A",
    "field.visibilis:branch.out2": "(O) NOT A",
    "field.visibilis:branch.in1": "(I)",
    "field.visibilis:branch.in2": "A",
    "node.visibilis:branch.groups": "exec",
    
    "node.visibilis:merge": "Merge",
    "field.visibilis:merge.out1": "(O)",
    "field.visibilis:merge.in1": "(I)",
    "node.visibilis:merge.groups": "exec",
    
    "node.visibilis:for": "For Loop",
    "field.visibilis:for.out1": "(O) Index == Length",
    "field.visibilis:for.out2": "(O) Index < Length",
    "field.visibilis:for.out3": "Index",
    "field.visibilis:for.in1": "(I)",
    "field.visibilis:for.in2": "Length",
    "node.visibilis:for.groups": "exec",
    
    "node.visibilis:while": "While Loop",
    "field.visibilis:while.out1": "(O) NOT A",
    "field.visibilis:while.out2": "(O) A",
    "field.visibilis:while.in1": "(I)",
    "field.visibilis:while.in2": "A",
    "node.visibilis:while.groups": "exec",
    
    "node.visibilis:then": "Then",
    "field.visibilis:then.out1": "(O)",
    "field.visibilis:then.in1": "(I)",
    "node.visibilis:then.groups": "exec",
    
    "node.visibilis:multi_equals_branch": "Multi Equals Branch",
    "field.visibilis:multi_equals_branch.out1": "(O) A == B",
    "field.visibilis:multi_equals_branch.out2": "(O)",
    "field.visibilis:multi_equals_branch.in1": "A",
    "field.visibilis:multi_equals_branch.in2": "B",
    "field.visibilis:multi_equals_branch.in3": "(I)",
    "node.visibilis:multi_equals_branch.groups": "exec",
    
    "_commentCompare": "--- Compare ---",
    "group.compare": "Compare",
    "group.compare.tags": "order;compare",
    
    "node.visibilis:equal_to": "Equal to",
    "field.visibilis:equal_to.out1": "A == B",
    "field.visibilis:equal_to.in1": "A",
    "field.visibilis:equal_to.in2": "B",
    "node.visibilis:equal_to.groups": "compare",
    
    "node.visibilis:not_equal_to": "Not Equal to",
    "field.visibilis:not_equal_to.out1": "A != B",
    "field.visibilis:not_equal_to.in1": "A",
    "field.visibilis:not_equal_to.in2": "B",
    "node.visibilis:not_equal_to.groups": "compare",
    
    "node.visibilis:greater_than": "Greater than",
    "field.visibilis:greater_than.out1": "A > B",
    "field.visibilis:greater_than.in1": "A",
    "field.visibilis:greater_than.in2": "B",
    "node.visibilis:greater_than.groups": "compare",
    
    "node.visibilis:greater_than_or_equal_to": "Greater than or Equal to",
    "field.visibilis:greater_than_or_equal_to.out1": "A >= B",
    "field.visibilis:greater_than_or_equal_to.in1": "A",
    "field.visibilis:greater_than_or_equal_to.in2": "B",
    "node.visibilis:greater_than_or_equal_to.groups": "compare",
    
    "node.visibilis:less_than": "Less than",
    "field.visibilis:less_than.out1": "A < B",
    "field.visibilis:less_than.in1": "A",
    "field.visibilis:less_than.in2": "B",
    "node.visibilis:less_than.groups": "compare",
    
    "node.visibilis:less_than_or_equal_to": "Less than or Equal to",
    "field.visibilis:less_than_or_equal_to.out1": "A <= B",
    "field.visibilis:less_than_or_equal_to.in1": "A",
    "field.visibilis:less_than_or_equal_to.in2": "B",
    "node.visibilis:less_than_or_equal_to.groups": "compare",
    
    "_commentCast": "--- Cast ---",
    "group.cast": "Cast",
    "group.cast.tags": "cast;convert",
    
    "node.visibilis:cast_number_to_integer": "Cast to Integer",
    "field.visibilis:cast_number_to_integer.out1": "Integer",
    "field.visibilis:cast_number_to_integer.in1": "Number",
    "node.visibilis:cast_number_to_integer.groups": "cast;operators",
    
    "node.visibilis:cast_number_to_float": "Cast to Float",
    "field.visibilis:cast_number_to_float.out1": "Float",
    "field.visibilis:cast_number_to_float.in1": "Number",
    "node.visibilis:cast_number_to_float.groups": "cast;operators",
    
    "node.visibilis:cast_number_to_double": "Cast to Double",
    "field.visibilis:cast_number_to_double.out1": "Double",
    "field.visibilis:cast_number_to_double.in1": "Number",
    "node.visibilis:cast_number_to_double.groups": "cast;operators",
    
    "_commentVectors": "--- Vectors ---",
    "group.vector": "Vector",
    "group.vector.tags": "vectors",
    
    "node.visibilis:vector3d_create": "Create Vector",
    "field.visibilis:vector3d_create.out1": "(X, Y, Z)",
    "field.visibilis:vector3d_create.in1": "X",
    "field.visibilis:vector3d_create.in2": "Y",
    "field.visibilis:vector3d_create.in3": "Z",
    "node.visibilis:vector3d_create.groups": "vector",
    
    "node.visibilis:vector3d_split": "Split Vector",
    "field.visibilis:vector3d_split.out1": "X",
    "field.visibilis:vector3d_split.out2": "Y",
    "field.visibilis:vector3d_split.out3": "Z",
    "field.visibilis:vector3d_split.in1": "(X, Y, Z)",
    "node.visibilis:vector3d_split.groups": "vector",
    
    "node.visibilis:vector3d_scale": "Scale Vector",
    "field.visibilis:vector3d_scale.out1": "(X*S, Y*S, Z*S)",
    "field.visibilis:vector3d_scale.in1": "(X, Y, Z)",
    "field.visibilis:vector3d_scale.in2": "S",
    "node.visibilis:vector3d_scale.groups": "vector",
    
    "node.visibilis:vector3d_addition": "Vector Addition",
    "field.visibilis:vector3d_addition.out1": "(X+A, Y+B, Z+C)",
    "field.visibilis:vector3d_addition.in1": "(X, Y, Z)",
    "field.visibilis:vector3d_addition.in2": "(A, B, C)",
    "node.visibilis:vector3d_addition.groups": "vector",
    
    "node.visibilis:vector3d_subtraction": "Vector Subtraction",
    "field.visibilis:vector3d_subtraction.out1": "(X-A, Y-B, Z-C)",
    "field.visibilis:vector3d_subtraction.in1": "(X, Y, Z)",
    "field.visibilis:vector3d_subtraction.in2": "(A, B, C)",
    "node.visibilis:vector3d_subtraction.groups": "vector",
    
    "node.visibilis:vector3d_normalization": "Vector Normalization",
    "field.visibilis:vector3d_normalization.out1": "(X, Y, Z) Normalized",
    "field.visibilis:vector3d_normalization.in1": "(X, Y, Z)",
    "node.visibilis:vector3d_normalization.groups": "vector",
    
    "node.visibilis:vector3d_dot_product": "Vector Dot Product",
    "field.visibilis:vector3d_dot_product.out1": "Dot Product",
    "field.visibilis:vector3d_dot_product.in1": "(X, Y, Z)",
    "field.visibilis:vector3d_dot_product.in2": "(A, B, C)",
    "node.visibilis:vector3d_dot_product.groups": "vector",
    
    "node.visibilis:vector3d_cross_product": "Vector Cross Product",
    "field.visibilis:vector3d_cross_product.out1": "Cross Product",
    "field.visibilis:vector3d_cross_product.in1": "(X, Y, Z)",
    "field.visibilis:vector3d_cross_product.in2": "(A, B, C)",
    "node.visibilis:vector3d_cross_product.groups": "vector",
    
    "node.visibilis:vector3d_length": "Vector Length",
    "field.visibilis:vector3d_length.out1": "SQRT(X*X + Y*Y + Z*Z)",
    "field.visibilis:vector3d_length.in1": "(X, Y, Z)",
    "node.visibilis:vector3d_length.groups": "vector",
    
    "node.visibilis:vector3d_length_squared": "Vector Length Squared",
    "field.visibilis:vector3d_length_squared.out1": "X*X + Y*Y + Z*Z",
    "field.visibilis:vector3d_length_squared.in1": "(X, Y, Z)",
    "node.visibilis:vector3d_length_squared.groups": "vector",
    
    "_commentPlayer": "--- Player ---",
    "group.player": "Player",
    "group.player.tags": "player",
    
    "node.visibilis:get_player_optional": "Get Player Optional",
    "field.visibilis:get_player_optional.out1": "(O) Player != null",
    "field.visibilis:get_player_optional.out2": "Player",
    "field.visibilis:get_player_optional.out3": "(O) Player == null",
    "field.visibilis:get_player_optional.in1": "(I)",
    "node.visibilis:get_player_optional.groups": "player",
    
    "node.visibilis:split_player": "Split Player",
    "field.visibilis:split_player.out1": "Position Vector",
    "field.visibilis:split_player.out2": "Motion Vector",
    "field.visibilis:split_player.out3": "World",
    "field.visibilis:split_player.in1": "Player",
    "node.visibilis:split_player.groups": "player",
    
    "node.visibilis:set_player_transform": "Set Player Transform",
    "field.visibilis:set_player_transform.out1": "(O)",
    "field.visibilis:set_player_transform.in1": "(I)",
    "field.visibilis:set_player_transform.in2": "Player",
    "field.visibilis:set_player_transform.in3": "Position Vector",
    "field.visibilis:set_player_transform.in4": "Motion Vector",
    "node.visibilis:set_player_transform.groups": "player",
    
    "_commentWorld": "--- World ---",
    "group.world": "World",
    "group.world.tags": "world",
    
    "node.visibilis:get_world_optional": "Get World Optional",
    "field.visibilis:get_world_optional.out1": "(O) World != null",
    "field.visibilis:get_world_optional.out2": "World",
    "field.visibilis:get_world_optional.out3": "(O) World == null",
    "field.visibilis:get_world_optional.in1": "(I)",
    "node.visibilis:get_world_optional.groups": "world",
    
    "node.visibilis:set_block": "Set Block",
    "field.visibilis:set_block.out1": "(O)",
    "field.visibilis:set_block.in1": "(I)",
    "field.visibilis:set_block.in2": "World",
    "field.visibilis:set_block.in3": "Block Pos",
    "field.visibilis:set_block.in4": "Block State",
    "node.visibilis:set_block.groups": "world",
    
    "node.visibilis:block_pos_create": "Create Block Pos",
    "field.visibilis:block_pos_create.out1": "(X, Y, Z)",
    "field.visibilis:block_pos_create.in1": "X",
    "field.visibilis:block_pos_create.in2": "Y",
    "field.visibilis:block_pos_create.in3": "Z",
    "node.visibilis:block_pos_create.groups": "world",
    
    "node.visibilis:block_pos_split": "Split Block Pos",
    "field.visibilis:block_pos_split.out1": "X",
    "field.visibilis:block_pos_split.out2": "Y",
    "field.visibilis:block_pos_split.out3": "Z",
    "field.visibilis:block_pos_split.in1": "(X, Y, Z)",
    "node.visibilis:block_pos_split.groups": "world",
    
    "node.visibilis:get_block": "Get Block",
    "field.visibilis:get_block.out1": "(O)",
    "field.visibilis:get_block.out2": "Block State",
    "field.visibilis:get_block.in1": "(I)",
    "field.visibilis:get_block.in2": "World",
    "field.visibilis:get_block.in3": "Block Pos",
    "node.visibilis:get_block.groups": "world",
    
    "_commentOther": "--- Other ---",
    "group.other": "Other",
    "group.other.tags": "other",
    
    "node.visibilis:print": "Print Out",
    "field.visibilis:print.out1": "(O)",
    "field.visibilis:print.in1": "(I)",
    "field.visibilis:print.in2": "Line",
    "node.visibilis:print.groups": "other"
}
